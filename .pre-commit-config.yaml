# Copyright 2025 Lincoln Institute of Land Policy
# SPDX-License-Identifier: Apache-2.0

minimum_pre_commit_version: "2.9.0"
ci:
  autoupdate_schedule: monthly
  skip: [typescript_gen_types, golang lint, gofmt, ts build, ts lint, rustfmt, clippy, cargo check]
repos:
  - repo: meta
    hooks:
      - id: check-useless-excludes
  - repo: local
    hooks:
      - id: forbid-symlinks
        name: Forbid symlinks
        entry: Forbid symlinks
        language: fail
        types: [symlink]
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: forbid-crlf
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: destroyed-symlinks
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
  - repo: https://github.com/google/addlicense
    rev: "v1.2.0"
    hooks:
      - id: addlicense
        args:
          ["-s=only", -l, "Apache-2.0", -c, "Lincoln Institute of Land Policy"]
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.103.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
  - repo: local
    hooks: 
      - id: typescript_gen_types
        name: Generate Typescript Types from go 
        entry: tygo generate 
        language: system
        types: [go]
        pass_filenames: false

      - id: gofmt
        name: Format go code
        entry: go fmt ./...
        language: system
        types: [go]
        pass_filenames: false # go fmt handles files itself


      - id: golang lint
        name: Lint go code
        entry: make lint 
        language: system
        types: [go]
        pass_filenames: false # lint handles files itself

      - id: ts build
        name: Ensure no frontend build errors
        entry: bash -c "cd crawl-status-page && npm run build"
        language: system
        types_or: [javascript, jsx, ts, tsx]
        pass_filenames: false # build handles files itself


      - id: ts lint
        name: Ensure no frontend lint errors
        entry: bash -c "cd crawl-status-page && npm run lint"
        language: system
        types_or: [javascript, jsx, ts, tsx]
        pass_filenames: false # build handles files itself

      - id: ts lint
        name: Ensure no frontend lint errors
        entry: bash -c "cd crawl-status-page && npm run lint"
        language: system
        types_or: [javascript, jsx, ts, tsx]
        pass_filenames: false # build handles files itself

      - id: rustfmt
        name: rustfmt
        entry: bash -c "cd shacl_validator/shacl_validator_grpc_rs && cargo fmt --all -- "
        language: system
        types: [rust]
        pass_filenames: false # cargo fmt handles files itself

      - id: cargo check 
        name: cargo check
        # check everything compiles
        entry: bash -c "cd shacl_validator/shacl_validator_grpc_rs && cargo check --examples --locked --all-features --tests --benches  --bins  --workspace"
        language: system
        types: [rust]
        pass_filenames: false  # cargo check handles files itself

      - id: clippy
        name: clippy
        # lint the entire project with warnings
        entry: bash -c "cd shacl_validator/shacl_validator_grpc_rs && cargo clippy --benches --examples --tests --no-deps --no-default-features -- -D warnings"
        language: system
        types: [rust]
        pass_filenames: false # cargo clippy handles files itself